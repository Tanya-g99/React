{"ast":null,"code":"var _jsxFileName = \"/home/gnatenkota/vsc/react/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Navbar } from \"./components/Navbar\";\nimport { MomentFeed } from \"./components/MomentFeed\";\nimport { Profile } from \"./components/Profile\";\nimport { ModalAddMoment } from \"./components/ModalAddMoment\";\nimport { Login } from \"./components/Login\";\nimport { Footer } from \"./components/Footer\";\nimport { EventFeed } from \"./components/EventFeed\";\nimport { moments, users, events } from \"./data/local\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [curPage, setPage] = useState(window.location.hash.length > 0 ? window.location.hash.replace(\"#\", \"\") : \"index\");\n  window.addEventListener(\"hashchange\", function () {\n    if (window.location.hash.length > 0) {\n      let name = window.location.hash.replace(\"#\", \"\");\n      setPage(name);\n    }\n  });\n  function addMomemt() {}\n  const [IsOpenAddMoment, setIsOpenAddMoment] = React.useState(false);\n  const [isLogged, setLogged] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isLogged: isLogged,\n      openModal: () => setIsOpenAddMoment(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-sm p-2vw mb-4\",\n      children: [curPage === \"index\" && /*#__PURE__*/_jsxDEV(MomentFeed, {\n        moments: moments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }, this), curPage === \"profile\" && (isLogged ? /*#__PURE__*/_jsxDEV(Profile, {\n        user: users[0],\n        moments: moments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {\n        login: () => setLogged(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)), curPage === 'notifications' && /*#__PURE__*/_jsxDEV(EventFeed, {\n        events: events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(ModalAddMoment, {\n        modalState: {\n          isOpen: IsOpenAddMoment,\n          setIsOpen: setIsOpenAddMoment\n        },\n        addMoment: addMomemt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"0Msn5tk8zfS0rM1i/nvXcqb8V2U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","MomentFeed","Profile","ModalAddMoment","Login","Footer","EventFeed","moments","users","events","App","curPage","setPage","window","location","hash","length","replace","addEventListener","name","addMomemt","IsOpenAddMoment","setIsOpenAddMoment","isLogged","setLogged","isOpen","setIsOpen"],"sources":["/home/gnatenkota/vsc/react/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Navbar } from \"./components/Navbar\";\nimport { MomentFeed } from \"./components/MomentFeed\";\nimport { Profile } from \"./components/Profile\";\nimport { ModalAddMoment } from \"./components/ModalAddMoment\";\nimport { Login } from \"./components/Login\";\nimport { Footer } from \"./components/Footer\";\nimport { EventFeed } from \"./components/EventFeed\";\n\nimport { moments, users, events } from \"./data/local\";\n\nconst App: React.FC = () => {\n  const [curPage, setPage] = useState(\n    window.location.hash.length > 0\n      ? window.location.hash.replace(\"#\", \"\")\n      : \"index\"\n  );\n  window.addEventListener(\"hashchange\", function () {\n    if (window.location.hash.length > 0) {\n      let name = window.location.hash.replace(\"#\", \"\");\n      setPage(name);\n    }\n  });\n\n  function addMomemt() {}\n\n  const [IsOpenAddMoment, setIsOpenAddMoment] = React.useState(false);\n\n  const [isLogged, setLogged] = useState(false);\n\n  return (\n    <>\n      <Navbar isLogged={isLogged} openModal={() => setIsOpenAddMoment(true)} />\n      <div className=\"container-sm p-2vw mb-4\">\n        {curPage === \"index\" && <MomentFeed moments={moments} />}\n        {curPage === \"profile\" &&\n          (isLogged ? (\n            <Profile user={users[0]} moments={moments} />\n          ) : (\n            <Login login={() => setLogged(true)} />\n          ))}\n        {curPage === 'notifications' && <EventFeed events={events}/>}\n        <ModalAddMoment\n          modalState={{\n            isOpen: IsOpenAddMoment,\n            setIsOpen: setIsOpenAddMoment,\n          }}\n          addMoment={addMomemt}\n        />\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,SAAS,QAAQ,wBAAwB;AAElD,SAASC,OAAO,EAAEC,KAAK,EAAEC,MAAM,QAAQ,cAAc;AAAC;AAAA;AAEtD,MAAMC,GAAa,GAAG,MAAM;EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CACjCc,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,MAAM,GAAG,CAAC,GAC3BH,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,GACrC,OAAO,CACZ;EACDJ,MAAM,CAACK,gBAAgB,CAAC,YAAY,EAAE,YAAY;IAChD,IAAIL,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;MACnC,IAAIG,IAAI,GAAGN,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;MAChDL,OAAO,CAACO,IAAI,CAAC;IACf;EACF,CAAC,CAAC;EAEF,SAASC,SAAS,GAAG,CAAC;EAEtB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAM,CAACwB,QAAQ,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAE7C,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,QAAQ,EAAEwB,QAAS;MAAC,SAAS,EAAE,MAAMD,kBAAkB,CAAC,IAAI;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eACzE;MAAK,SAAS,EAAC,yBAAyB;MAAA,WACrCX,OAAO,KAAK,OAAO,iBAAI,QAAC,UAAU;QAAC,OAAO,EAAEJ;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,EACvDI,OAAO,KAAK,SAAS,KACnBY,QAAQ,gBACP,QAAC,OAAO;QAAC,IAAI,EAAEf,KAAK,CAAC,CAAC,CAAE;QAAC,OAAO,EAAED;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,gBAE7C,QAAC,KAAK;QAAC,KAAK,EAAE,MAAMiB,SAAS,CAAC,IAAI;MAAE;QAAA;QAAA;QAAA;MAAA,QACrC,CAAC,EACHb,OAAO,KAAK,eAAe,iBAAI,QAAC,SAAS;QAAC,MAAM,EAAEF;MAAO;QAAA;QAAA;QAAA;MAAA,QAAE,eAC5D,QAAC,cAAc;QACb,UAAU,EAAE;UACVgB,MAAM,EAAEJ,eAAe;UACvBK,SAAS,EAAEJ;QACb,CAAE;QACF,SAAS,EAAEF;MAAU;QAAA;QAAA;QAAA;MAAA,QACrB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACN,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACT;AAEP,CAAC;AAAC,GA1CIV,GAAa;AAAA,KAAbA,GAAa;AA4CnB,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}