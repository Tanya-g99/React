{"ast":null,"code":"var _jsxFileName = \"/home/gnatenkota/vsc/react/frontend/src/routes/root.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport { Footer } from \"../components/Footer\";\nimport { ModalAddMoment } from \"../components/ModalAddMoment\";\nimport { Navbar } from \"../components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Root = () => {\n  _s();\n  function search() {\n    console.log(\"search\");\n  }\n  const [isLogged, setLogged] = useState(false);\n  let [userId, setUserId] = useState(\"\");\n  let res = window.sessionStorage.getItem(\"logged\");\n  setLogged(JSON.parse(res));\n  res = window.sessionStorage.getItem(\"user_id\");\n  setUserId(JSON.parse(res));\n  const [IsOpenAddMoment, setIsOpenAddMoment] = React.useState(false);\n  function addMomemt() {}\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isLogged: isLogged,\n      openModal: () => setIsOpenAddMoment(true),\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"detail\",\n      className: \"container-sm p-2vw mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalAddMoment, {\n      modalState: {\n        isOpen: IsOpenAddMoment,\n        setIsOpen: setIsOpenAddMoment\n      },\n      addMoment: addMomemt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Root, \"gsN5euKTUzXgHthwf5VGJmd+Q+c=\");\n_c = Root;\nvar _c;\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"names":["React","useState","Outlet","Footer","ModalAddMoment","Navbar","Root","search","console","log","isLogged","setLogged","userId","setUserId","res","window","sessionStorage","getItem","JSON","parse","IsOpenAddMoment","setIsOpenAddMoment","addMomemt","isOpen","setIsOpen"],"sources":["/home/gnatenkota/vsc/react/frontend/src/routes/root.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport { Footer } from \"../components/Footer\";\nimport { ModalAddMoment } from \"../components/ModalAddMoment\";\nimport { Navbar } from \"../components/Navbar\";\n\nexport const Root: React.FC = () => {\n  function search() {\n    console.log(\"search\");\n  }\n\n  const [isLogged, setLogged] = useState(false);\n  let [userId, setUserId] = useState(\"\");\n  let res = window.sessionStorage.getItem(\"logged\");\n  setLogged(JSON.parse(res!));\n  res = window.sessionStorage.getItem(\"user_id\");\n  setUserId(JSON.parse(res!));\n\n  const [IsOpenAddMoment, setIsOpenAddMoment] = React.useState(false);\n\n  function addMomemt() {}\n  return (\n    <>\n      <Navbar\n        isLogged={isLogged}\n        openModal={() => setIsOpenAddMoment(true)}\n        search={search}\n      />\n      <div id=\"detail\" className=\"container-sm p-2vw mb-4\">\n        <Outlet />\n      </div>\n\n      <ModalAddMoment\n        modalState={{\n          isOpen: IsOpenAddMoment,\n          setIsOpen: setIsOpenAddMoment,\n        }}\n        addMoment={addMomemt}\n      />\n      <Footer />\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,MAAM,QAAQ,sBAAsB;AAAC;AAAA;AAE9C,OAAO,MAAMC,IAAc,GAAG,MAAM;EAAA;EAClC,SAASC,MAAM,GAAG;IAChBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACvB;EAEA,MAAM,CAACC,QAAQ,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,IAAI,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,IAAIa,GAAG,GAAGC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;EACjDN,SAAS,CAACO,IAAI,CAACC,KAAK,CAACL,GAAG,CAAE,CAAC;EAC3BA,GAAG,GAAGC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC;EAC9CJ,SAAS,CAACK,IAAI,CAACC,KAAK,CAACL,GAAG,CAAE,CAAC;EAE3B,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;EAEnE,SAASqB,SAAS,GAAG,CAAC;EACtB,oBACE;IAAA,wBACE,QAAC,MAAM;MACL,QAAQ,EAAEZ,QAAS;MACnB,SAAS,EAAE,MAAMW,kBAAkB,CAAC,IAAI,CAAE;MAC1C,MAAM,EAAEd;IAAO;MAAA;MAAA;MAAA;IAAA,QACf,eACF;MAAK,EAAE,EAAC,QAAQ;MAAC,SAAS,EAAC,yBAAyB;MAAA,uBAClD,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACN,eAEN,QAAC,cAAc;MACb,UAAU,EAAE;QACVgB,MAAM,EAAEH,eAAe;QACvBI,SAAS,EAAEH;MACb,CAAE;MACF,SAAS,EAAEC;IAAU;MAAA;MAAA;MAAA;IAAA,QACrB,eACF,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACT;AAEP,CAAC;AAAC,GApCWhB,IAAc;AAAA,KAAdA,IAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}