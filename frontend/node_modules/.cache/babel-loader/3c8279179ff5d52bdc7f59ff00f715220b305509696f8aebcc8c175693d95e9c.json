{"ast":null,"code":"var _jsxFileName = \"/home/gnatenkota/vsc/react/frontand/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Navbar } from \"./components/Navbar\";\nimport { MomentFeed } from \"./components/MomentFeed\";\nimport { Profile } from \"./components/Profile\";\nimport { ModalAddMoment } from \"./components/ModalAddMoment\";\nimport { Login } from \"./components/Login\";\nimport { Footer } from \"./components/Footer\";\nimport { EventFeed } from \"./components/EventFeed\";\nimport { moments, users, events } from \"./data/local\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // const [curPage, setPage] = useState(\n  //   window.location.hash.length > 0\n  //     ? window.location.hash.replace(\"#\", \"\")\n  //     : \"index\"\n  // );\n  // window.addEventListener(\"hashchange\", function () {\n  //   if (window.location.hash.length > 0) {\n  //     let name = window.location.hash.replace(\"#\", \"\");\n  //     setPage(name);\n  //   }\n  // });\n\n  function addMomemt() {}\n  const [IsOpenAddMoment, setIsOpenAddMoment] = React.useState(false);\n  const [isLogged, setLogged] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isLogged: isLogged,\n      openModal: () => setIsOpenAddMoment(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-sm p-2vw mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(MomentFeed, {\n            moments: moments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          render: () => isLogged ? /*#__PURE__*/_jsxDEV(Profile, {\n            user: users[0],\n            moments: moments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            login: () => setLogged(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"#/notifications\",\n          render: () => /*#__PURE__*/_jsxDEV(EventFeed, {\n            events: events\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalAddMoment, {\n        modalState: {\n          isOpen: IsOpenAddMoment,\n          setIsOpen: setIsOpenAddMoment\n        },\n        addMoment: addMomemt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"62oHtM8zCvOuG7TLBKaYAmgpJFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Route","Switch","Navbar","MomentFeed","Profile","ModalAddMoment","Login","Footer","EventFeed","moments","users","events","App","addMomemt","IsOpenAddMoment","setIsOpenAddMoment","isLogged","setLogged","isOpen","setIsOpen"],"sources":["/home/gnatenkota/vsc/react/frontand/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Navbar } from \"./components/Navbar\";\nimport { MomentFeed } from \"./components/MomentFeed\";\nimport { Profile } from \"./components/Profile\";\nimport { ModalAddMoment } from \"./components/ModalAddMoment\";\nimport { Login } from \"./components/Login\";\nimport { Footer } from \"./components/Footer\";\nimport { EventFeed } from \"./components/EventFeed\";\n\nimport { moments, users, events } from \"./data/local\";\n\nconst App: React.FC = () => {\n  // const [curPage, setPage] = useState(\n  //   window.location.hash.length > 0\n  //     ? window.location.hash.replace(\"#\", \"\")\n  //     : \"index\"\n  // );\n  // window.addEventListener(\"hashchange\", function () {\n  //   if (window.location.hash.length > 0) {\n  //     let name = window.location.hash.replace(\"#\", \"\");\n  //     setPage(name);\n  //   }\n  // });\n\n  function addMomemt() {}\n\n  const [IsOpenAddMoment, setIsOpenAddMoment] = React.useState(false);\n\n  const [isLogged, setLogged] = useState(false);\n\n  return (\n    <>\n        <Navbar\n          isLogged={isLogged}\n          openModal={() => setIsOpenAddMoment(true)}\n        />\n        <div className=\"container-sm p-2vw mb-4\">\n          {/* {curPage === \"index\" && <MomentFeed moments={moments} />}\n          {curPage === \"profile\" &&\n            (isLogged ? (\n              <Profile user={users[0]} moments={moments} />\n            ) : (\n              <Login login={() => setLogged(true)} />\n            ))}\n          {curPage === \"notifications\" && <EventFeed events={events} />}\n          <ModalAddMoment\n            modalState={{\n              isOpen: IsOpenAddMoment,\n              setIsOpen: setIsOpenAddMoment,\n            }}\n            addMoment={addMomemt}\n          /> */}\n          <Switch>\n            <Route path=\"/\" render={() => <MomentFeed moments={moments} />} />\n            <Route\n              path=\"/profile\"\n              render={() =>\n                isLogged ? (\n                  <Profile user={users[0]} moments={moments} />\n                ) : (\n                  <Login login={() => setLogged(true)} />\n                )\n              }\n            />\n            <Route\n              path=\"#/notifications\"\n              render={() => <EventFeed events={events} />}\n            />\n          </Switch>\n          <ModalAddMoment\n            modalState={{\n              isOpen: IsOpenAddMoment,\n              setIsOpen: setIsOpenAddMoment,\n            }}\n            addMoment={addMomemt}\n          />\n        </div>\n        <Footer />\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,SAAS,QAAQ,wBAAwB;AAElD,SAASC,OAAO,EAAEC,KAAK,EAAEC,MAAM,QAAQ,cAAc;AAAC;AAAA;AAEtD,MAAMC,GAAa,GAAG,MAAM;EAAA;EAC1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,SAASC,SAAS,GAAG,CAAC;EAEtB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAM,CAACiB,QAAQ,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE7C,oBACE;IAAA,wBACI,QAAC,MAAM;MACL,QAAQ,EAAEiB,QAAS;MACnB,SAAS,EAAE,MAAMD,kBAAkB,CAAC,IAAI;IAAE;MAAA;MAAA;MAAA;IAAA,QAC1C,eACF;MAAK,SAAS,EAAC,yBAAyB;MAAA,wBAgBtC,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAC,MAAM,EAAE,mBAAM,QAAC,UAAU;YAAC,OAAO,EAAEN;UAAQ;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eAClE,QAAC,KAAK;UACJ,IAAI,EAAC,UAAU;UACf,MAAM,EAAE,MACNO,QAAQ,gBACN,QAAC,OAAO;YAAC,IAAI,EAAEN,KAAK,CAAC,CAAC,CAAE;YAAC,OAAO,EAAED;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAG,gBAE7C,QAAC,KAAK;YAAC,KAAK,EAAE,MAAMQ,SAAS,CAAC,IAAI;UAAE;YAAA;YAAA;YAAA;UAAA;QAEvC;UAAA;UAAA;UAAA;QAAA,QACD,eACF,QAAC,KAAK;UACJ,IAAI,EAAC,iBAAiB;UACtB,MAAM,EAAE,mBAAM,QAAC,SAAS;YAAC,MAAM,EAAEN;UAAO;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAC5C;MAAA;QAAA;QAAA;QAAA;MAAA,QACK,eACT,QAAC,cAAc;QACb,UAAU,EAAE;UACVO,MAAM,EAAEJ,eAAe;UACvBK,SAAS,EAAEJ;QACb,CAAE;QACF,SAAS,EAAEF;MAAU;QAAA;QAAA;QAAA;MAAA,QACrB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACN,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACX;AAEP,CAAC;AAAC,GArEID,GAAa;AAAA,KAAbA,GAAa;AAuEnB,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}